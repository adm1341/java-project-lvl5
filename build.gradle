plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
	id 'com.adarshr.test-logger' version '3.0.0'
	id 'jacoco'
	id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
	id "com.github.johnrengelman.processes" version "0.5.0"
	id 'org.liquibase.gradle' version '2.0.4'
	// Сборщик фронтенда
	id 'org.siouan.frontend-jdk11' version '6.0.0'

}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

compileJava {
	compileJava.options.encoding = "UTF-8"
	options.release = 16
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'com.github.database-rider:rider-junit5:1.32.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2:1.4.200'
	implementation 'org.postgresql:postgresql:42.2.24'
	implementation 'org.liquibase:liquibase-core'

	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime sourceSets.main.output

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.12'
}

diffChangeLog {
	dependsOn compileJava
}
liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			url 'jdbc:h2:./hexletBlog'
			username ''
			password ''
			referenceUrl 'hibernate:spring:hexlet.code.app.model' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// Сборка фронтенда.
// Выполняется только если ничего не изменилось.
// *****************************************************************************
frontend {
	nodeVersion = '16.13.1'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend
// *****************************************************************************





jar {
	baseName = 'app-0.0.1-SNAPSHOT'
}
installDist.mustRunAfter clean

